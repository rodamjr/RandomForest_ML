import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load Titanic dataset from CSV
df = pd.read_csv('titanic.csv')

# Preprocessing (drop rows with missing values for simplicity)
df = df[['Pclass', 'Sex', 'Age', 'Fare', 'Survived']].dropna()

# Convert 'Sex' to numeric (male: 0, female: 1)
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})

# Features and target
X = df[['Pclass', 'Sex', 'Age', 'Fare']]
y = df['Survived']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Random Forest model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Prediction and accuracy
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy of the Random Forest model on Titanic dataset: {accuracy * 100:.2f}%')

# Example: Predict if a new passenger survives
# Let's say: 2nd class, female, 30 years old, paid 70 fare
new_passenger = pd.DataFrame([[2, 1, 30, 70]], columns=['Pclass', 'Sex', 'Age', 'Fare'])

# Predict survival
prediction = model.predict(new_passenger)
print("Will the passenger survive?" , "Yes" if prediction[0] == 1 else "No")
