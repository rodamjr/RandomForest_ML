import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Sample real-life inspired dataset
data = {
    'Size(sqft)': [1500, 1800, 2400, 3000, 3500, 4000, 1200, 1600, 2100, 2500],
    'Bedrooms': [3, 4, 3, 5, 4, 5, 2, 3, 4, 4],
    'Age': [10, 5, 15, 20, 10, 8, 25, 12, 6, 9],
    'DistanceToCityCenter(km)': [5, 3, 10, 12, 4, 6, 20, 8, 7, 5],
    'Price': [300000, 450000, 400000, 600000, 520000, 650000, 250000, 320000, 490000, 530000]
}

df = pd.DataFrame(data)

# Features and Target
X = df[['Size(sqft)', 'Bedrooms', 'Age', 'DistanceToCityCenter(km)']]
y = df['Price']

# Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Random Forest Regressor
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict and Evaluate
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse:.2f}')

# Example: Predict price of a new house
new_house = pd.DataFrame([[2000, 3, 7, 4]], columns=['Size(sqft)', 'Bedrooms', 'Age', 'DistanceToCityCenter(km)'])
prediction = model.predict(new_house)
print(f'Predicted house price: ${prediction[0]:,.2f}')
